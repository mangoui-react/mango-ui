// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Doc = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Doc'
  title?: string | undefined
  package?: string | undefined
  description?: string | undefined
  id?: string | undefined
  scope: 'usage' | 'theming' | 'props'
  version?: string | undefined
  author?: string | undefined
  video?: string | undefined
  category?: string | undefined
  aria?: string | undefined
  prevTitle?: string | undefined
  prevSlug?: string | undefined
  nextTitle?: string | undefined
  nextSlug?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  frontMatter: json
}

export type Overview = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Overview'
  title?: string | undefined
  package?: string | undefined
  description?: string | undefined
  id?: string | undefined
  scope: 'usage' | 'theming' | 'props'
  version?: string | undefined
  author?: string | undefined
  video?: string | undefined
  category?: string | undefined
  aria?: string | undefined
  prevTitle?: string | undefined
  prevSlug?: string | undefined
  nextTitle?: string | undefined
  nextSlug?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  frontMatter: json
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  date: IsoDateTimeString
  /** Markdown file body */
  body: Markdown
  url: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Doc | Overview | Post
export type DocumentTypeNames = 'Doc' | 'Overview' | 'Post'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPosts: Post[]
  allOverviews: Overview[]
  allDocs: Doc[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Doc: Doc
  Overview: Overview
  Post: Post
}

export type NestedTypeMap = {

}

 