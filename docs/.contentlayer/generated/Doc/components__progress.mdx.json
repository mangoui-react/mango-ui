{
  "title": "Progress",
  "scope": "usage",
  "prevTitle": "Popover",
  "prevSlug": "/components/popover",
  "nextTitle": "RadioGroup",
  "nextSlug": "/components/radio-group",
  "body": {
    "raw": "\n# Progress\n\n<Description>Displays a progress bar indicating task completion.</Description>\n\n<DemoContainer>\n  <ProgressDemo />\n  <DemoCodeBlock component=\"progress\" />\n</DemoContainer>\n\n## Installation\n\n<PackageManagers\n  command={{\n    npm: 'npm i @melio-ui/progress',\n    yarn: 'yarn add @melio-ui/progress',\n    pnpm: 'pnpm add @melio-ui/progress',\n    bun: 'bun add @melio-ui/progress',\n  }}\n/>\n\n## Import\n\n<ImportSyntax\n  command={{\n    individual: `import { \n  ProgressRoot,\n  ProgressIndicator,\n} from '@melio-ui/progress';`,\n    global: `import { \n  ProgressRoot,\n  ProgressIndicator,\n} from '@melio-ui/react';`,\n  }}\n/>\n\n- **ProgressRoot**: All parts of the progress are included.\n- **ProgressIndicator**: Render the progress indicator. You can style it yourself.\n\n### Another way to import\n\n```js\n'use client';\n\nimport { Progress } from '@melio-ui/progress';\n\n<Progress.Root value={30}>\n  <Progress.Indicator />\n</Progress.Root>;\n```\n\n> 'use client' must be used when rendering on the server side.\n\n## API Reference\n\n### ProgressRoot\n\nAll parts of the progress are included.\n\n<PropsTable\n  data={[\n    {\n      name: 'value',\n      required: false,\n      type: 'number',\n      description: 'It is the progress value.',\n    },\n    {\n      name: 'max',\n      required: false,\n      default: '100',\n      type: 'number',\n      description: 'This is the maximum progress value.',\n    },\n    {\n      name: 'indeterminate',\n      required: false,\n      type: 'boolean',\n      description: 'This means that progress is uncertain.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"complete\" | \"loading\" | \"indeterminate\"',\n    },\n    {\n      attribute: '[data-value]',\n      values: 'The current value',\n    },\n    {\n      attribute: '[data-max]',\n      values: 'The max value',\n    },\n  ]}\n/>\n\n### ProgressIndicator\n\nRender the progress indicator. You can style it yourself.\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"complete\" | \"loading\" | \"indeterminate\"',\n    },\n    {\n      attribute: '[data-value]',\n      values: 'The current value',\n    },\n    {\n      attribute: '[data-max]',\n      values: 'The max value',\n    },\n  ]}\n/>\n\n## Examples\n\n### Indeterminate\n\n```jsx\n<ProgressRoot indeterminate>\n  <ProgressIndicator />\n</ProgressRoot>\n```\n\n### Custom Indicator\n\n```jsx\n<ProgressRoot value={30}>\n  <ProgressIndicator style={{ backgroundColor: '#ff4d4f' }} />\n</ProgressRoot>\n```\n\n### Max\n\n```jsx\n<ProgressRoot value={100} max={200}>\n  <ProgressIndicator />\n</ProgressRoot>\n```\n",
    "code": "var Component=(()=>{var P=Object.create;var a=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),I=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},g=(n,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of v(e))!R.call(n,t)&&t!==o&&a(n,t,{get:()=>e[t],enumerable:!(i=b(e,t))||i.enumerable});return n};var k=(n,e,o)=>(o=n!=null?P(x(n)):{},g(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),D=n=>g(a({},\"__esModule\",{value:!0}),n);var h=y((_,p)=>{p.exports=_jsx_runtime});var C={};I(C,{default:()=>T,frontmatter:()=>w});var r=k(h()),w={title:\"Progress\",prevTitle:\"Popover\",prevSlug:\"/components/popover\",nextTitle:\"RadioGroup\",nextSlug:\"/components/radio-group\"};function f(n){let e=Object.assign({h1:\"h1\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",p:\"p\"},n.components),{Description:o,DemoContainer:i,ProgressDemo:t,DemoCodeBlock:d,PackageManagers:c,ImportSyntax:m,PropsTable:u,DataAttributesTable:l}=e;return l||s(\"DataAttributesTable\",!0),d||s(\"DemoCodeBlock\",!0),i||s(\"DemoContainer\",!0),o||s(\"Description\",!0),m||s(\"ImportSyntax\",!0),c||s(\"PackageManagers\",!0),t||s(\"ProgressDemo\",!0),u||s(\"PropsTable\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{children:\"Progress\"}),`\n`,(0,r.jsx)(o,{children:\"Displays a progress bar indicating task completion.\"}),`\n`,(0,r.jsxs)(i,{children:[(0,r.jsx)(t,{}),(0,r.jsxs)(d,{component:\"progress\",children:[(0,r.jsx)(\"pre\",{title:\"index.tsx\",source:`import React from 'react';\n\nimport { ProgressIndicator, ProgressRoot } from '@melio-ui/progress';\n\nimport './styles.css';\n\nexport default function ProgressDemo() {\n  return (\n    <ProgressRoot className=\"progress-root\" value={30}>\n      <ProgressIndicator className=\"progress-indicator\" />\n    </ProgressRoot>\n  );\n}\n`,children:(0,r.jsx)(\"code\",{source:`import React from 'react';\n\nimport { ProgressIndicator, ProgressRoot } from '@melio-ui/progress';\n\nimport './styles.css';\n\nexport default function ProgressDemo() {\n  return (\n    <ProgressRoot className=\"progress-root\" value={30}>\n      <ProgressIndicator className=\"progress-indicator\" />\n    </ProgressRoot>\n  );\n}\n`})}),(0,r.jsx)(\"pre\",{title:\"styles.css\",source:`.progress-root {\n  position: relative;\n  overflow: hidden;\n  background-color: rgba(255, 255, 255, 0.24);\n  width: 18.75rem;\n  height: 0.5rem;\n}\n\n.progress-indicator {\n  width: 100%;\n  height: 100%;\n  background-color: #208aff;\n  transition: transform 660ms cubic-bezier(0.65, 0, 0.35, 1);\n}\n.progress-indicator[data-state='indeterminate'] {\n  min-width: 50%;\n  position: absolute;\n  animation: indeterminate 1s ease infinite normal none running;\n  transition-duration: 300ms;\n}\n\n@keyframes indeterminate {\n  0% {\n    left: '-40%';\n  }\n  100% {\n    left: '100%';\n  }\n}\n`,children:(0,r.jsx)(\"code\",{source:`.progress-root {\n  position: relative;\n  overflow: hidden;\n  background-color: rgba(255, 255, 255, 0.24);\n  width: 18.75rem;\n  height: 0.5rem;\n}\n\n.progress-indicator {\n  width: 100%;\n  height: 100%;\n  background-color: #208aff;\n  transition: transform 660ms cubic-bezier(0.65, 0, 0.35, 1);\n}\n.progress-indicator[data-state='indeterminate'] {\n  min-width: 50%;\n  position: absolute;\n  animation: indeterminate 1s ease infinite normal none running;\n  transition-duration: 300ms;\n}\n\n@keyframes indeterminate {\n  0% {\n    left: '-40%';\n  }\n  100% {\n    left: '100%';\n  }\n}\n`})})]})]}),`\n`,(0,r.jsx)(e.h2,{children:\"Installation\"}),`\n`,(0,r.jsx)(c,{command:{npm:\"npm i @melio-ui/progress\",yarn:\"yarn add @melio-ui/progress\",pnpm:\"pnpm add @melio-ui/progress\",bun:\"bun add @melio-ui/progress\"}}),`\n`,(0,r.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,r.jsx)(m,{command:{individual:`import { \n  ProgressRoot,\n  ProgressIndicator,\n} from '@melio-ui/progress';`,global:`import { \n  ProgressRoot,\n  ProgressIndicator,\n} from '@melio-ui/react';`}}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"ProgressRoot\"}),\": All parts of the progress are included.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"ProgressIndicator\"}),\": Render the progress indicator. You can style it yourself.\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{children:\"Another way to import\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-js\",children:`'use client';\n\nimport { Progress } from '@melio-ui/progress';\n\n<Progress.Root value={30}>\n  <Progress.Indicator />\n</Progress.Root>;\n`})}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsx)(e.p,{children:\"'use client' must be used when rendering on the server side.\"}),`\n`]}),`\n`,(0,r.jsx)(e.h2,{children:\"API Reference\"}),`\n`,(0,r.jsx)(e.h3,{children:\"ProgressRoot\"}),`\n`,(0,r.jsx)(e.p,{children:\"All parts of the progress are included.\"}),`\n`,(0,r.jsx)(u,{data:[{name:\"value\",required:!1,type:\"number\",description:\"It is the progress value.\"},{name:\"max\",required:!1,default:\"100\",type:\"number\",description:\"This is the maximum progress value.\"},{name:\"indeterminate\",required:!1,type:\"boolean\",description:\"This means that progress is uncertain.\"}]}),`\n`,(0,r.jsx)(l,{data:[{attribute:\"[data-state]\",values:'\"complete\" | \"loading\" | \"indeterminate\"'},{attribute:\"[data-value]\",values:\"The current value\"},{attribute:\"[data-max]\",values:\"The max value\"}]}),`\n`,(0,r.jsx)(e.h3,{children:\"ProgressIndicator\"}),`\n`,(0,r.jsx)(e.p,{children:\"Render the progress indicator. You can style it yourself.\"}),`\n`,(0,r.jsx)(l,{data:[{attribute:\"[data-state]\",values:'\"complete\" | \"loading\" | \"indeterminate\"'},{attribute:\"[data-value]\",values:\"The current value\"},{attribute:\"[data-max]\",values:\"The max value\"}]}),`\n`,(0,r.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,r.jsx)(e.h3,{children:\"Indeterminate\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<ProgressRoot indeterminate>\n  <ProgressIndicator />\n</ProgressRoot>\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"Custom Indicator\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<ProgressRoot value={30}>\n  <ProgressIndicator style={{ backgroundColor: '#ff4d4f' }} />\n</ProgressRoot>\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"Max\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<ProgressRoot value={100} max={200}>\n  <ProgressIndicator />\n</ProgressRoot>\n`})})]})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(f,n)})):f(n)}var T=j;function s(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return D(C);})();\n;return Component;"
  },
  "_id": "components/progress.mdx",
  "_raw": {
    "sourceFilePath": "components/progress.mdx",
    "sourceFileName": "progress.mdx",
    "sourceFileDir": "components",
    "contentType": "mdx",
    "flattenedPath": "components/progress"
  },
  "type": "Doc",
  "slug": "/components/progress",
  "frontMatter": {
    "title": "Progress",
    "slug": "/components/progress"
  }
}