{
  "title": "Avatar",
  "scope": "usage",
  "prevTitle": "Alert",
  "prevSlug": "/components/alert",
  "nextTitle": "Badge",
  "nextSlug": "/components/badge",
  "body": {
    "raw": "\n# Avatar\n\n<Description>An alternative image element for user representation.</Description>\n\n<DemoContainer>\n  <AvatarDemo />\n  <DemoCodeBlock component=\"avatar\" />\n</DemoContainer>\n\n## Installation\n\n<PackageManagers\n  command={{\n    npm: 'npm i @melio-ui/avatar',\n    yarn: 'yarn add @melio-ui/avatar',\n    pnpm: 'pnpm add @melio-ui/avatar',\n    bun: 'bun add @melio-ui/avatar',\n  }}\n/>\n\n## Import\n\n<ImportSyntax\n  command={{\n    individual: `import { \n  AvatarRoot,\n  AvatarImg,\n  AvatarGroup,\n  AvatarGroupContent,\n  AvatarExtra,\n} from '@melio-ui/avatar';`,\n    global: `import { \n  AvatarRoot,\n  AvatarImg,\n  AvatarGroup,\n  AvatarGroupContent,\n  AvatarExtra,\n} from '@melio-ui/react';`,\n  }}\n/>\n\n- **AvatarRoot**: All parts of the avatar are included.\n- **AvatarImg**: The image to render. By default, it will only be rendered when loaded.\n- **AvatarGroup**: It is a wrapper that stacks multiple avatars together.\n- **AvatarGroupContent**: When using AvatarGroup, an avatar component is included.\n- **AvatarExtra**: When using AvatarGroup, extra space above the maximum number of avatars is displayed.\n\n### Another way to import\n\n```js\n'use client';\n\nimport { Avatar } from '@melio-ui/avatar';\n\n<Avatar.Root>\n  <Avatar.Img />\n</Avatar.Root>;\n```\n\n> 'use client' must be used when rendering on the server side.\n\n## API Reference\n\n### AvatarRoot\n\nAll parts of the avatar are included.\n\n### AvatarImg\n\nThe image to render. By default, it will only be rendered when loaded.\n\n<PropsTable\n  data={[\n    {\n      name: 'src',\n      required: false,\n      type: 'string',\n      description: 'The src attribute of the img element.',\n    },\n    {\n      name: 'srcSet',\n      required: false,\n      type: 'string',\n      description: 'The srcset attribute of the img element.',\n    },\n    {\n      name: 'sizes',\n      required: false,\n      type: 'string',\n      description: 'The sizes attribute of the img element.',\n    },\n    {\n      name: 'alt',\n      required: false,\n      type: 'string',\n      description: 'The alt attribute of the img element.',\n    },\n    {\n      name: 'crossOrigin',\n      required: false,\n      type: '\"anonymous\" | \"use-credentials\" | \"\"',\n      description: 'The crossorigin attribute of the img element.',\n    },\n    {\n      name: 'referrerPolicy',\n      required: false,\n      type: 'React.HTMLAttributeReferrerPolicy',\n      description: 'The referrerpolicy attribute of the img element.',\n    },\n  ]}\n/>\n\n### AvatarGroup\n\nIt is a wrapper that stacks multiple avatars together.\n\n<PropsTable\n  data={[\n    {\n      name: 'max',\n      required: false,\n      default: '5',\n      type: 'number',\n      description: 'The maximum number of avatars that can be displayed.',\n    },\n  ]}\n/>\n\n### AvatarGroupContent\n\nWhen using AvatarGroup, an avatar component is included.\n\n### AvatarExtra\n\nWhen using AvatarGroup, extra space above the maximum number of avatars is displayed.\n\n<PropsTable\n  data={[\n    {\n      name: 'asChild',\n      required: false,\n      type: 'boolean',\n      description:\n        'Changes the default rendering element passed as a child, merging its props and behavior.',\n    },\n  ]}\n/>\n\n## Examples\n\n### Loading the image.\n\n```jsx\n<AvatarRoot>\n  <AvatarImg src=\"http://bit.ly/3XZx3ZU\" />\n</AvatarRoot>\n```\n\n### Grouping\n\n```jsx\n<AvatarGroup>\n  <AvatarGroupContent>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n  </AvatarGroupContent>\n</AvatarGroup>\n```\n\n### Setting the maximum value\n\n```jsx\n<AvatarGroup max={2}>\n  <AvatarGroupContent>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n  </AvatarGroupContent>\n  <AvatarExtra />\n</AvatarGroup>\n```\n",
    "code": "var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),R=(t,e)=>{for(var r in e)s(t,r,{get:e[r],enumerable:!0})},p=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of A(e))!b.call(t,a)&&a!==r&&s(t,a,{get:()=>e[a],enumerable:!(i=f(e,a))||i.enumerable});return t};var G=(t,e,r)=>(r=t!=null?g(x(t)):{},p(e||!t||!t.__esModule?s(r,\"default\",{value:t,enumerable:!0}):r,t)),I=t=>p(s({},\"__esModule\",{value:!0}),t);var h=y((D,u)=>{u.exports=_jsx_runtime});var T={};R(T,{default:()=>j,frontmatter:()=>w});var n=G(h()),w={title:\"Avatar\",prevTitle:\"Alert\",prevSlug:\"/components/alert\",nextTitle:\"Badge\",nextSlug:\"/components/badge\"};function v(t){let e=Object.assign({h1:\"h1\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",p:\"p\"},t.components),{Description:r,DemoContainer:i,AvatarDemo:a,DemoCodeBlock:c,PackageManagers:d,ImportSyntax:m,PropsTable:l}=e;return a||o(\"AvatarDemo\",!0),c||o(\"DemoCodeBlock\",!0),i||o(\"DemoContainer\",!0),r||o(\"Description\",!0),m||o(\"ImportSyntax\",!0),d||o(\"PackageManagers\",!0),l||o(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Avatar\"}),`\n`,(0,n.jsx)(r,{children:\"An alternative image element for user representation.\"}),`\n`,(0,n.jsxs)(i,{children:[(0,n.jsx)(a,{}),(0,n.jsxs)(c,{component:\"avatar\",children:[(0,n.jsx)(\"pre\",{title:\"index.tsx\",source:`import React from 'react';\n\nimport { AvatarRoot } from '@melio-ui/avatar';\n\nimport './styles.css';\n\nexport default function AvatarDemo() {\n  return <AvatarRoot className=\"avatar-root\">U</AvatarRoot>;\n}\n`,children:(0,n.jsx)(\"code\",{source:`import React from 'react';\n\nimport { AvatarRoot } from '@melio-ui/avatar';\n\nimport './styles.css';\n\nexport default function AvatarDemo() {\n  return <AvatarRoot className=\"avatar-root\">U</AvatarRoot>;\n}\n`})}),(0,n.jsx)(\"pre\",{title:\"styles.css\",source:`.avatar-root {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  overflow: hidden;\n  background-color: #857f7f;\n  color: #fff;\n  border-radius: 50%;\n  font-size: 1.25rem;\n  user-select: none;\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  color: transparent;\n}\n\n.avatar-group {\n  display: flex;\n  align-items: center;\n}\n\n.avatar-group-content {\n  display: flex;\n  align-items: center;\n}\n\n.avatar-group-content .avatar-root {\n  border: 2px solid transparent;\n  margin-left: -10;\n}\n\n.avatar-group-content .avatar-root:first-child {\n  margin-left: 0;\n}\n\n.avatar-group-content + .avatar-root {\n  border: 2px solid transparent;\n  margin-left: -10;\n}\n`,children:(0,n.jsx)(\"code\",{source:`.avatar-root {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  overflow: hidden;\n  background-color: #857f7f;\n  color: #fff;\n  border-radius: 50%;\n  font-size: 1.25rem;\n  user-select: none;\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  color: transparent;\n}\n\n.avatar-group {\n  display: flex;\n  align-items: center;\n}\n\n.avatar-group-content {\n  display: flex;\n  align-items: center;\n}\n\n.avatar-group-content .avatar-root {\n  border: 2px solid transparent;\n  margin-left: -10;\n}\n\n.avatar-group-content .avatar-root:first-child {\n  margin-left: 0;\n}\n\n.avatar-group-content + .avatar-root {\n  border: 2px solid transparent;\n  margin-left: -10;\n}\n`})})]})]}),`\n`,(0,n.jsx)(e.h2,{children:\"Installation\"}),`\n`,(0,n.jsx)(d,{command:{npm:\"npm i @melio-ui/avatar\",yarn:\"yarn add @melio-ui/avatar\",pnpm:\"pnpm add @melio-ui/avatar\",bun:\"bun add @melio-ui/avatar\"}}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(m,{command:{individual:`import { \n  AvatarRoot,\n  AvatarImg,\n  AvatarGroup,\n  AvatarGroupContent,\n  AvatarExtra,\n} from '@melio-ui/avatar';`,global:`import { \n  AvatarRoot,\n  AvatarImg,\n  AvatarGroup,\n  AvatarGroupContent,\n  AvatarExtra,\n} from '@melio-ui/react';`}}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AvatarRoot\"}),\": All parts of the avatar are included.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AvatarImg\"}),\": The image to render. By default, it will only be rendered when loaded.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AvatarGroup\"}),\": It is a wrapper that stacks multiple avatars together.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AvatarGroupContent\"}),\": When using AvatarGroup, an avatar component is included.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AvatarExtra\"}),\": When using AvatarGroup, extra space above the maximum number of avatars is displayed.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Another way to import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`'use client';\n\nimport { Avatar } from '@melio-ui/avatar';\n\n<Avatar.Root>\n  <Avatar.Img />\n</Avatar.Root>;\n`})}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"'use client' must be used when rendering on the server side.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"API Reference\"}),`\n`,(0,n.jsx)(e.h3,{children:\"AvatarRoot\"}),`\n`,(0,n.jsx)(e.p,{children:\"All parts of the avatar are included.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"AvatarImg\"}),`\n`,(0,n.jsx)(e.p,{children:\"The image to render. By default, it will only be rendered when loaded.\"}),`\n`,(0,n.jsx)(l,{data:[{name:\"src\",required:!1,type:\"string\",description:\"The src attribute of the img element.\"},{name:\"srcSet\",required:!1,type:\"string\",description:\"The srcset attribute of the img element.\"},{name:\"sizes\",required:!1,type:\"string\",description:\"The sizes attribute of the img element.\"},{name:\"alt\",required:!1,type:\"string\",description:\"The alt attribute of the img element.\"},{name:\"crossOrigin\",required:!1,type:'\"anonymous\" | \"use-credentials\" | \"\"',description:\"The crossorigin attribute of the img element.\"},{name:\"referrerPolicy\",required:!1,type:\"React.HTMLAttributeReferrerPolicy\",description:\"The referrerpolicy attribute of the img element.\"}]}),`\n`,(0,n.jsx)(e.h3,{children:\"AvatarGroup\"}),`\n`,(0,n.jsx)(e.p,{children:\"It is a wrapper that stacks multiple avatars together.\"}),`\n`,(0,n.jsx)(l,{data:[{name:\"max\",required:!1,default:\"5\",type:\"number\",description:\"The maximum number of avatars that can be displayed.\"}]}),`\n`,(0,n.jsx)(e.h3,{children:\"AvatarGroupContent\"}),`\n`,(0,n.jsx)(e.p,{children:\"When using AvatarGroup, an avatar component is included.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"AvatarExtra\"}),`\n`,(0,n.jsx)(e.p,{children:\"When using AvatarGroup, extra space above the maximum number of avatars is displayed.\"}),`\n`,(0,n.jsx)(l,{data:[{name:\"asChild\",required:!1,type:\"boolean\",description:\"Changes the default rendering element passed as a child, merging its props and behavior.\"}]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Loading the image.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<AvatarRoot>\n  <AvatarImg src=\"http://bit.ly/3XZx3ZU\" />\n</AvatarRoot>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Grouping\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<AvatarGroup>\n  <AvatarGroupContent>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n  </AvatarGroupContent>\n</AvatarGroup>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Setting the maximum value\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<AvatarGroup max={2}>\n  <AvatarGroupContent>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n    <AvatarRoot>\n      <UserIcon />\n    </AvatarRoot>\n  </AvatarGroupContent>\n  <AvatarExtra />\n</AvatarGroup>\n`})})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(v,t)})):v(t)}var j=C;function o(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return I(T);})();\n;return Component;"
  },
  "_id": "components/avatar.mdx",
  "_raw": {
    "sourceFilePath": "components/avatar.mdx",
    "sourceFileName": "avatar.mdx",
    "sourceFileDir": "components",
    "contentType": "mdx",
    "flattenedPath": "components/avatar"
  },
  "type": "Doc",
  "slug": "/components/avatar",
  "frontMatter": {
    "title": "Avatar",
    "slug": "/components/avatar"
  }
}