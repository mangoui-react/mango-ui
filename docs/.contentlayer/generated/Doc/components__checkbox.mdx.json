{
  "title": "Checkbox",
  "scope": "usage",
  "prevTitle": "Breadcrumb",
  "prevSlug": "/components/breadcrumb",
  "nextTitle": "CircularProgress",
  "nextSlug": "/components/circular-progress",
  "body": {
    "raw": "\n# Checkbox\n\n<Description>\n  Checkbox components are used in forms when the user needs to select multiple values from multiple\n  options.\n</Description>\n\n<DemoContainer>\n  <CheckboxDemo />\n  <DemoCodeBlock component=\"checkbox\" />\n</DemoContainer>\n\n## Installation\n\n<PackageManagers\n  command={{\n    npm: 'npm i @melio-ui/checkbox',\n    yarn: 'yarn add @melio-ui/checkbox',\n    pnpm: 'pnpm add @melio-ui/checkbox',\n    bun: 'bun add @melio-ui/checkbox',\n  }}\n/>\n\n## Import\n\n<ImportSyntax\n  command={{\n    individual: `import { \n  CheckboxRoot,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel,\n  CheckboxGroup,\n} from '@melio-ui/checkbox';`,\n    global: `import { \n  CheckboxRoot,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel,\n  CheckboxGroup,\n} from '@melio-ui/react';`,\n  }}\n/>\n\n- **CheckboxRoot**: All parts of the checkbox are included.\n- **CheckboxIndicator**: Rendered when the checkbox is checked or indeterminate. Style it directly, use it as an icon wrapper, or both.\n- **CheckboxIcon**: Displays check, uncheck, and indeterminate status.\n- **CheckboxLabel**: Display text.\n- **CheckboxGroup**: Group checkboxes.\n\n### Another way to import\n\n```js\n'use client';\n\nimport { Checkbox } from '@melio-ui/checkbox';\n\n<Checkbox.Root>\n  <Checkbox.Indicator>\n    <Checkbox.Icon />\n  </Checkbox.Indicator>\n  <Checkbox.Label>체크박스</Checkbox.Label>\n</Checkbox.Root>;\n```\n\n> 'use client' must be used when rendering on the server side.\n\n## API Reference\n\n### CheckboxRoot\n\nAll parts of the checkbox are included.\n\n<PropsTable\n  data={[\n    {\n      name: 'checked',\n      required: false,\n      type: 'boolean',\n      description: 'Set whether to check or not.',\n    },\n    {\n      name: 'defaultChecked',\n      required: false,\n      type: 'boolean',\n      description:\n        'The checked state of the checkbox when it is first rendered. Use this when there is no need to control the checked state.',\n    },\n    {\n      name: 'indeterminate',\n      required: false,\n      type: 'boolean',\n      description:\n        'This refers to a state indicating partial selection, meaning that some, but not all, of the related checkboxes are selected.',\n    },\n    {\n      name: 'disabled',\n      required: false,\n      type: 'boolean',\n      description: 'Determines whether the checkbox is inactive.',\n    },\n    {\n      name: 'inputProps',\n      required: false,\n      type: (\n        <>{`React.\n      InputHTMLAttributes\n      <HTMLInputElement>`}</>\n      ),\n      description: 'Attributes assigned to the input element.',\n    },\n    {\n      name: 'onCheckedChange',\n      required: false,\n      type: '(checked: boolean) => void',\n      description:\n        'This is an event handler that is triggered when the state of the checkbox changes.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"checked\" | \"unchecked\" | \"indeterminate\"',\n    },\n    {\n      attribute: '[data-disabled]',\n      values: 'Visible when disabled',\n    },\n    {\n      attribute: '[data-readonly]',\n      values: 'Visible when read-only',\n    },\n  ]}\n/>\n\n### CheckboxIndicator\n\nRendered when the checkbox is checked or indeterminate. Style it directly, use it as an icon wrapper, or both.\n\n<PropsTable\n  data={[\n    {\n      name: 'children',\n      required: true,\n      type: 'React.ReactNode | (checked: boolean, indeterminate?: boolean) => React.ReactNode',\n      description: 'Elements rendered when a checkbox is checked or indeterminate.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"checked\" | \"unchecked\" | \"indeterminate\"',\n    },\n  ]}\n/>\n\n### CheckboxIcon\n\nDisplays check, uncheck, and indeterminate status.\n\n<PropsTable\n  data={[\n    {\n      name: 'checkedIcon',\n      required: false,\n      type: 'React.ReactNode',\n      description: 'Icon that indicates the checked status.',\n    },\n    {\n      name: 'uncheckedIcon',\n      required: false,\n      type: 'React.ReactNode',\n      description: 'Icon that indicates the unchecked status.',\n    },\n    {\n      name: 'indeterminateIcon',\n      required: false,\n      type: 'React.ReactNode',\n      description: 'Icon that indicates the indeterminate status.',\n    },\n  ]}\n/>\n\n### CheckboxLabel\n\nDisplay text.\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"checked\" | \"unchecked\" | \"indeterminate\"',\n    },\n  ]}\n/>\n\n### CheckboxGroup\n\nGroup checkboxes.\n\n<PropsTable\n  data={[\n    {\n      name: 'orientation',\n      required: false,\n      type: (\n        <>\n          TypeAttributes.Orientation\n          <br />\n          <br />\n          \"horizontal\" | \"vertical\"\n        </>\n      ),\n      description: 'Direction for the placement of the Checkbox component.',\n    },\n    {\n      name: 'onValueChange',\n      required: false,\n      type: (\n        <>\n          {`(value: CheckboxValue[]) => void`}\n          <br />\n          <br />\n          CheckboxValue: string | number | undefined\n        </>\n      ),\n      description:\n        'This is an event handler that is triggered when the state of a checkbox group changes.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-orientation]',\n      values: '\"horizontal\" | \"vertical\"',\n    },\n  ]}\n/>\n\n## Examples\n\n### defaultChecked\n\n```jsx\n<CheckboxRoot defaultChecked>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>defaultChecked</CheckboxLabel>\n</CheckboxRoot>\n```\n\n### disabled\n\n```jsx\n<CheckboxRoot disabled>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>disabled</CheckboxLabel>\n</CheckboxRoot>\n```\n\n### indeterminate\n\n```jsx\n<CheckboxRoot indeterminate>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>indeterminate</CheckboxLabel>\n</CheckboxRoot>\n```\n\n### Indicator children function\n\n```jsx render=true\nfunction IndicatorFunc() {\n  return (\n    <CheckboxRoot>\n      <CheckboxIndicator>\n        {(checked: boolean) => {\n          if (checked) return <CheckedUserIcon />;\n          return <UncheckedUserIcon />;\n        }}\n      </CheckboxIndicator>\n      <CheckboxLabel>User</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n\nrender(<IndicatorFunc />);\n\nfunction CheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#00A8FF\"\n      />\n    </svg>\n  );\n}\n\nfunction UncheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#cacdcf\"\n      />\n    </svg>\n  );\n}\n```\n\n### Checked/Unchecked Icon\n\n```jsx render=true\nfunction CustomCheckboxIcon() {\n  return (\n    <CheckboxRoot>\n      <CheckboxIndicator>\n        <CheckboxIcon checkedIcon={<CheckedUserIcon />} uncheckedIcon={<UncheckedUserIcon />} />\n      </CheckboxIndicator>\n      <CheckboxLabel>User</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n\nrender(<CustomCheckboxIcon />);\n\nfunction CheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#00A8FF\"\n      />\n    </svg>\n  );\n}\n\nfunction UncheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#cacdcf\"\n      />\n    </svg>\n  );\n}\n```\n",
    "code": "var Component=(()=>{var p=Object.create;var d=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var v=(o,n)=>()=>(n||o((n={exports:{}}).exports,n),n.exports),w=(o,n)=>{for(var c in n)d(o,c,{get:n[c],enumerable:!0})},k=(o,n,c,i)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of f(n))!I.call(o,t)&&t!==c&&d(o,t,{get:()=>n[t],enumerable:!(i=C(n,t))||i.enumerable});return o};var y=(o,n,c)=>(c=o!=null?p(g(o)):{},k(n||!o||!o.__esModule?d(c,\"default\",{value:o,enumerable:!0}):c,o)),R=o=>k(d({},\"__esModule\",{value:!0}),o);var u=v((j,x)=>{x.exports=_jsx_runtime});var U={};w(U,{default:()=>N,frontmatter:()=>L});var e=y(u()),L={title:\"Checkbox\",prevTitle:\"Breadcrumb\",prevSlug:\"/components/breadcrumb\",nextTitle:\"CircularProgress\",nextSlug:\"/components/circular-progress\"};function m(o){let n=Object.assign({h1:\"h1\",p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",br:\"br\"},o.components),{Description:c,DemoContainer:i,CheckboxDemo:t,DemoCodeBlock:l,PackageManagers:s,ImportSyntax:b,PropsTable:a,DataAttributesTable:h}=n;return t||r(\"CheckboxDemo\",!0),h||r(\"DataAttributesTable\",!0),l||r(\"DemoCodeBlock\",!0),i||r(\"DemoContainer\",!0),c||r(\"Description\",!0),b||r(\"ImportSyntax\",!0),s||r(\"PackageManagers\",!0),a||r(\"PropsTable\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Checkbox\"}),`\n`,(0,e.jsx)(c,{children:(0,e.jsx)(n.p,{children:`Checkbox components are used in forms when the user needs to select multiple values from multiple\noptions.`})}),`\n`,(0,e.jsxs)(i,{children:[(0,e.jsx)(t,{}),(0,e.jsxs)(l,{component:\"checkbox\",children:[(0,e.jsx)(\"pre\",{title:\"index.tsx\",source:`import React from 'react';\n\nimport { CheckboxIcon, CheckboxIndicator, CheckboxLabel, CheckboxRoot } from '@melio-ui/checkbox';\n\nimport './styles.css';\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxRoot className=\"checkbox-root\">\n      <CheckboxIndicator className=\"checkbox-indicator\">\n        <CheckboxIcon className=\"checkbox-icon\" />\n      </CheckboxIndicator>\n      <CheckboxLabel className=\"checkbox-label\">Label</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n`,children:(0,e.jsx)(\"code\",{source:`import React from 'react';\n\nimport { CheckboxIcon, CheckboxIndicator, CheckboxLabel, CheckboxRoot } from '@melio-ui/checkbox';\n\nimport './styles.css';\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxRoot className=\"checkbox-root\">\n      <CheckboxIndicator className=\"checkbox-indicator\">\n        <CheckboxIcon className=\"checkbox-icon\" />\n      </CheckboxIndicator>\n      <CheckboxLabel className=\"checkbox-label\">Label</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n`})}),(0,e.jsx)(\"pre\",{title:\"styles.css\",source:`.checkbox-root {\n  display: inline-flex;\n  align-items: center;\n}\n\n.checkbox-root[data-readonly] {\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-root[data-disabled] {\n  cursor: not-allowed;\n}\n\n.checkbox-root > input[type='checkbox'] {\n  position: absolute;\n  width: 0.0625rem;\n  height: 0.0625rem;\n  margin: 0;\n  cursor: inherit;\n  opacity: 0;\n}\n\n.checkbox-indicator {\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: #208aff;\n  cursor: pointer;\n}\n.checkbox-root[data-readonly] .indicator {\n  cursor: default;\n}\n.checkbox-root[data-disabled] .indicator {\n  color: #d9d9d9;\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-icon {\n  font-size: 1.5rem;\n}\n\n.checkbox-label {\n  padding-left: 0.3125rem;\n  padding-right: 0.3125rem;\n  cursor: pointer;\n  color: #e2e8f0;\n}\n.checkbox-root[data-disabled] .label {\n  color: #d9d9d9;\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-group {\n  display: flex;\n  flex-direction: row;\n  gap: 0.625rem;\n}\n.checkbox-group[data-orientation='vertical'] {\n  flex-direction: column;\n}\n`,children:(0,e.jsx)(\"code\",{source:`.checkbox-root {\n  display: inline-flex;\n  align-items: center;\n}\n\n.checkbox-root[data-readonly] {\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-root[data-disabled] {\n  cursor: not-allowed;\n}\n\n.checkbox-root > input[type='checkbox'] {\n  position: absolute;\n  width: 0.0625rem;\n  height: 0.0625rem;\n  margin: 0;\n  cursor: inherit;\n  opacity: 0;\n}\n\n.checkbox-indicator {\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: #208aff;\n  cursor: pointer;\n}\n.checkbox-root[data-readonly] .indicator {\n  cursor: default;\n}\n.checkbox-root[data-disabled] .indicator {\n  color: #d9d9d9;\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-icon {\n  font-size: 1.5rem;\n}\n\n.checkbox-label {\n  padding-left: 0.3125rem;\n  padding-right: 0.3125rem;\n  cursor: pointer;\n  color: #e2e8f0;\n}\n.checkbox-root[data-disabled] .label {\n  color: #d9d9d9;\n  cursor: default;\n  pointer-events: none;\n}\n\n.checkbox-group {\n  display: flex;\n  flex-direction: row;\n  gap: 0.625rem;\n}\n.checkbox-group[data-orientation='vertical'] {\n  flex-direction: column;\n}\n`})})]})]}),`\n`,(0,e.jsx)(n.h2,{children:\"Installation\"}),`\n`,(0,e.jsx)(s,{command:{npm:\"npm i @melio-ui/checkbox\",yarn:\"yarn add @melio-ui/checkbox\",pnpm:\"pnpm add @melio-ui/checkbox\",bun:\"bun add @melio-ui/checkbox\"}}),`\n`,(0,e.jsx)(n.h2,{children:\"Import\"}),`\n`,(0,e.jsx)(b,{command:{individual:`import { \n  CheckboxRoot,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel,\n  CheckboxGroup,\n} from '@melio-ui/checkbox';`,global:`import { \n  CheckboxRoot,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel,\n  CheckboxGroup,\n} from '@melio-ui/react';`}}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CheckboxRoot\"}),\": All parts of the checkbox are included.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CheckboxIndicator\"}),\": Rendered when the checkbox is checked or indeterminate. Style it directly, use it as an icon wrapper, or both.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CheckboxIcon\"}),\": Displays check, uncheck, and indeterminate status.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CheckboxLabel\"}),\": Display text.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CheckboxGroup\"}),\": Group checkboxes.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{children:\"Another way to import\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`'use client';\n\nimport { Checkbox } from '@melio-ui/checkbox';\n\n<Checkbox.Root>\n  <Checkbox.Indicator>\n    <Checkbox.Icon />\n  </Checkbox.Indicator>\n  <Checkbox.Label>\\uCCB4\\uD06C\\uBC15\\uC2A4</Checkbox.Label>\n</Checkbox.Root>;\n`})}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"'use client' must be used when rendering on the server side.\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"API Reference\"}),`\n`,(0,e.jsx)(n.h3,{children:\"CheckboxRoot\"}),`\n`,(0,e.jsx)(n.p,{children:\"All parts of the checkbox are included.\"}),`\n`,(0,e.jsx)(a,{data:[{name:\"checked\",required:!1,type:\"boolean\",description:\"Set whether to check or not.\"},{name:\"defaultChecked\",required:!1,type:\"boolean\",description:\"The checked state of the checkbox when it is first rendered. Use this when there is no need to control the checked state.\"},{name:\"indeterminate\",required:!1,type:\"boolean\",description:\"This refers to a state indicating partial selection, meaning that some, but not all, of the related checkboxes are selected.\"},{name:\"disabled\",required:!1,type:\"boolean\",description:\"Determines whether the checkbox is inactive.\"},{name:\"inputProps\",required:!1,type:(0,e.jsx)(e.Fragment,{children:`React.\n      InputHTMLAttributes\n      <HTMLInputElement>`}),description:\"Attributes assigned to the input element.\"},{name:\"onCheckedChange\",required:!1,type:\"(checked: boolean) => void\",description:\"This is an event handler that is triggered when the state of the checkbox changes.\"}]}),`\n`,(0,e.jsx)(h,{data:[{attribute:\"[data-state]\",values:'\"checked\" | \"unchecked\" | \"indeterminate\"'},{attribute:\"[data-disabled]\",values:\"Visible when disabled\"},{attribute:\"[data-readonly]\",values:\"Visible when read-only\"}]}),`\n`,(0,e.jsx)(n.h3,{children:\"CheckboxIndicator\"}),`\n`,(0,e.jsx)(n.p,{children:\"Rendered when the checkbox is checked or indeterminate. Style it directly, use it as an icon wrapper, or both.\"}),`\n`,(0,e.jsx)(a,{data:[{name:\"children\",required:!0,type:\"React.ReactNode | (checked: boolean, indeterminate?: boolean) => React.ReactNode\",description:\"Elements rendered when a checkbox is checked or indeterminate.\"}]}),`\n`,(0,e.jsx)(h,{data:[{attribute:\"[data-state]\",values:'\"checked\" | \"unchecked\" | \"indeterminate\"'}]}),`\n`,(0,e.jsx)(n.h3,{children:\"CheckboxIcon\"}),`\n`,(0,e.jsx)(n.p,{children:\"Displays check, uncheck, and indeterminate status.\"}),`\n`,(0,e.jsx)(a,{data:[{name:\"checkedIcon\",required:!1,type:\"React.ReactNode\",description:\"Icon that indicates the checked status.\"},{name:\"uncheckedIcon\",required:!1,type:\"React.ReactNode\",description:\"Icon that indicates the unchecked status.\"},{name:\"indeterminateIcon\",required:!1,type:\"React.ReactNode\",description:\"Icon that indicates the indeterminate status.\"}]}),`\n`,(0,e.jsx)(n.h3,{children:\"CheckboxLabel\"}),`\n`,(0,e.jsx)(n.p,{children:\"Display text.\"}),`\n`,(0,e.jsx)(h,{data:[{attribute:\"[data-state]\",values:'\"checked\" | \"unchecked\" | \"indeterminate\"'}]}),`\n`,(0,e.jsx)(n.h3,{children:\"CheckboxGroup\"}),`\n`,(0,e.jsx)(n.p,{children:\"Group checkboxes.\"}),`\n`,(0,e.jsx)(a,{data:[{name:\"orientation\",required:!1,type:(0,e.jsxs)(e.Fragment,{children:[\"TypeAttributes.Orientation\",(0,e.jsx)(n.br,{}),(0,e.jsx)(n.br,{}),'\"horizontal\" | \"vertical\"']}),description:\"Direction for the placement of the Checkbox component.\"},{name:\"onValueChange\",required:!1,type:(0,e.jsxs)(e.Fragment,{children:[\"(value: CheckboxValue[]) => void\",(0,e.jsx)(n.br,{}),(0,e.jsx)(n.br,{}),\"CheckboxValue: string | number | undefined\"]}),description:\"This is an event handler that is triggered when the state of a checkbox group changes.\"}]}),`\n`,(0,e.jsx)(h,{data:[{attribute:\"[data-orientation]\",values:'\"horizontal\" | \"vertical\"'}]}),`\n`,(0,e.jsx)(n.h2,{children:\"Examples\"}),`\n`,(0,e.jsx)(n.h3,{children:\"defaultChecked\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<CheckboxRoot defaultChecked>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>defaultChecked</CheckboxLabel>\n</CheckboxRoot>\n`})}),`\n`,(0,e.jsx)(n.h3,{children:\"disabled\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<CheckboxRoot disabled>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>disabled</CheckboxLabel>\n</CheckboxRoot>\n`})}),`\n`,(0,e.jsx)(n.h3,{children:\"indeterminate\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<CheckboxRoot indeterminate>\n  <CheckboxIndicator>\n    <CheckboxIcon />\n  </CheckboxIndicator>\n  <CheckboxLabel>indeterminate</CheckboxLabel>\n</CheckboxRoot>\n`})}),`\n`,(0,e.jsx)(n.h3,{children:\"Indicator children function\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",render:\"true\",children:`function IndicatorFunc() {\n  return (\n    <CheckboxRoot>\n      <CheckboxIndicator>\n        {(checked: boolean) => {\n          if (checked) return <CheckedUserIcon />;\n          return <UncheckedUserIcon />;\n        }}\n      </CheckboxIndicator>\n      <CheckboxLabel>User</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n\nrender(<IndicatorFunc />);\n\nfunction CheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#00A8FF\"\n      />\n    </svg>\n  );\n}\n\nfunction UncheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#cacdcf\"\n      />\n    </svg>\n  );\n}\n`})}),`\n`,(0,e.jsx)(n.h3,{children:\"Checked/Unchecked Icon\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",render:\"true\",children:`function CustomCheckboxIcon() {\n  return (\n    <CheckboxRoot>\n      <CheckboxIndicator>\n        <CheckboxIcon checkedIcon={<CheckedUserIcon />} uncheckedIcon={<UncheckedUserIcon />} />\n      </CheckboxIndicator>\n      <CheckboxLabel>User</CheckboxLabel>\n    </CheckboxRoot>\n  );\n}\n\nrender(<CustomCheckboxIcon />);\n\nfunction CheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#00A8FF\"\n      />\n    </svg>\n  );\n}\n\nfunction UncheckedUserIcon() {\n  return (\n    <svg\n      width=\"2em\"\n      height=\"2em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n        fill=\"#cacdcf\"\n      />\n    </svg>\n  );\n}\n`})})]})}function D(o={}){let{wrapper:n}=o.components||{};return n?(0,e.jsx)(n,Object.assign({},o,{children:(0,e.jsx)(m,o)})):m(o)}var N=D;function r(o,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return R(U);})();\n;return Component;"
  },
  "_id": "components/checkbox.mdx",
  "_raw": {
    "sourceFilePath": "components/checkbox.mdx",
    "sourceFileName": "checkbox.mdx",
    "sourceFileDir": "components",
    "contentType": "mdx",
    "flattenedPath": "components/checkbox"
  },
  "type": "Doc",
  "slug": "/components/checkbox",
  "frontMatter": {
    "title": "Checkbox",
    "slug": "/components/checkbox"
  }
}