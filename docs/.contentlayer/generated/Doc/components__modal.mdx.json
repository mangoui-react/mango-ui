{
  "title": "Modal",
  "scope": "usage",
  "prevTitle": "Dropdown",
  "prevSlug": "/components/dropdown",
  "nextTitle": "NumberInput",
  "nextSlug": "/components/number-input",
  "body": {
    "raw": "\n# Modal\n\n<Description>\n  A modal is a dialog box that overlays the main content to focus the user's attention.\n</Description>\n\n<DemoContainer>\n  <ModalDemo />\n  <DemoCodeBlock component=\"modal\" />\n</DemoContainer>\n\n## Installation\n\n<PackageManagers\n  command={{\n    npm: 'npm i @melio-ui/modal',\n    yarn: 'yarn add @melio-ui/modal',\n    pnpm: 'pnpm add @melio-ui/modal',\n    bun: 'bun add @melio-ui/modal',\n  }}\n/>\n\n## Import\n\n<ImportSyntax\n  command={{\n    individual: `import { \n  ModalRoot,\n  ModalTrigger,\n  ModalPortal,\n  ModalBackdrop,\n  ModalContent,\n  ModalClose,\n} from '@melio-ui/modal';`,\n    global: `import { \n  ModalRoot,\n  ModalTrigger,\n  ModalPortal,\n  ModalBackdrop,\n  ModalContent,\n  ModalClose,\n} from '@melio-ui/react';`,\n  }}\n/>\n\n- **ModalRoot**: All parts of the modal are included.\n- **ModalTrigger**: Used to activate or open the Modal component.\n- **ModalPortal**: Portal the overlay and content portion into the body.\n- **ModalBackdrop**: A layer that covers the inactive portion of the view when a dialog box is opened.\n- **ModalContent**: Includes the content that will be displayed in the open dialog box.\n- **ModalClose**: The button that closes the dialog.\n\n### Another way to import\n\n```js\n'use client';\n\nimport { Modal } from '@melio-ui/modal';\n\n<Modal.Root>\n  <Modal.Trigger asChild>\n    <button type=\"button\">Open Modal</button>\n  </Modal.Trigger>\n  <Modal.Portal>\n    <Modal.Backdrop />\n    <Modal.Content>\n      <Modal.Close asChild>\n        <button type=\"button\" />\n      </Modal.Close>\n      <div>Modal Content</div>\n    </Modal.Content>\n  </Modal.Portal>\n</Modal.Root>;\n```\n\n> 'use client' must be used when rendering on the server side.\n\n## API Reference\n\n### ModalRoot\n\nAll parts of the modal are included.\n\n<PropsTable\n  data={[\n    {\n      name: 'open',\n      required: false,\n      type: 'boolean',\n      description: 'Sets whether the drawer is open or closed.',\n    },\n    {\n      name: 'defaultOpen',\n      required: false,\n      type: 'boolean',\n      description:\n        'When first rendered, the drawer is in an opened state. Use when there is no need to control the opened state.',\n    },\n    {\n      name: 'onOpenChange',\n      required: false,\n      type: '(open: boolean) => void',\n      description:\n        'This is an event handler that is triggered when the open state of the drawer changes.',\n    },\n  ]}\n/>\n\n### ModalTrigger\n\nUsed to activate or open the Modal component.\n\n<PropsTable\n  data={[\n    {\n      name: 'asChild',\n      required: false,\n      type: 'boolean',\n      description:\n        'Changes the default rendering element passed as a child, merging its props and behavior.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"open\" | \"closed\"',\n    },\n  ]}\n/>\n\n### ModalPortal\n\nPortal the overlay and content portion into the body.\n\n<PropsTable\n  data={[\n    {\n      name: 'container',\n      required: false,\n      default: 'document.body',\n      type: 'HTMLElement | (() => HTMLElement)',\n      description: 'Specifies the container element to which the content should be portaled.',\n    },\n  ]}\n/>\n\n### ModalBackdrop\n\nA layer that covers the inactive portion of the view when a dialog box is opened.\n\n<PropsTable\n  data={[\n    {\n      name: 'preventCloseOnClick',\n      required: false,\n      type: 'boolean',\n      description: 'Prevents closing when clicking on backdrop.',\n    },\n  ]}\n/>\n\n### ModalContent\n\nIncludes the content that will be displayed in the open dialog box.\n\n<PropsTable\n  data={[\n    {\n      name: 'destroyOnClose',\n      required: false,\n      default: 'true',\n      type: 'boolean',\n      description: 'Used to ensure that the DOM is removed when closed.',\n    },\n    {\n      name: 'forceMount',\n      required: false,\n      type: 'boolean',\n      description:\n        \"Used to ensure that a component is always rendered in the DOM, regardless of its visibility or whether it's conditionally displayed.\",\n    },\n    {\n      name: 'closeOnEsc',\n      required: false,\n      default: 'true',\n      type: 'boolean',\n      description: 'Determines whether or not to close when the ESC key is pressed.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"open\" | \"closed\"',\n    },\n  ]}\n/>\n\n### ModalClose\n\nThe button that closes the dialog.\n\n<PropsTable\n  data={[\n    {\n      name: 'asChild',\n      required: false,\n      type: 'boolean',\n      description:\n        'Changes the default rendering element passed as a child, merging its props and behavior.',\n    },\n  ]}\n/>\n\n## Examples\n\n### Position\n\n```jsx render=true\nfunction ModalPosition() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop />\n        <ModalContent style={{ top: 200 }}>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalPosition />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n```\n\n### Custom Size\n\n```jsx render=true\nfunction ModalCustomSize() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop />\n        <ModalContent style={{ width: 800 }}>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalCustomSize />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n```\n\n### Prevent closing when clicking on the backdrop.\n\n```jsx render=true\nfunction ModalCustomSize() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop preventCloseOnClick />\n        <ModalContent>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalCustomSize />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n```\n",
    "code": "var Component=(()=>{var M=Object.create;var i=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var x=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports),w=(e,o)=>{for(var t in o)i(e,t,{get:o[t],enumerable:!0})},u=(e,o,t,d)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let r of f(o))!v.call(e,r)&&r!==t&&i(e,r,{get:()=>o[r],enumerable:!(d=C(o,r))||d.enumerable});return e};var k=(e,o,t)=>(t=e!=null?M(y(e)):{},u(o||!e||!e.__esModule?i(t,\"default\",{value:e,enumerable:!0}):t,e)),B=e=>u(i({},\"__esModule\",{value:!0}),e);var g=x((N,h)=>{h.exports=_jsx_runtime});var z={};w(z,{default:()=>R,frontmatter:()=>T});var n=k(g()),T={title:\"Modal\",prevTitle:\"Dropdown\",prevSlug:\"/components/dropdown\",nextTitle:\"NumberInput\",nextSlug:\"/components/number-input\"};function b(e){let o=Object.assign({h1:\"h1\",p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\"},e.components),{Description:t,DemoContainer:d,ModalDemo:r,DemoCodeBlock:c,PackageManagers:p,ImportSyntax:m,PropsTable:a,DataAttributesTable:s}=o;return s||l(\"DataAttributesTable\",!0),c||l(\"DemoCodeBlock\",!0),d||l(\"DemoContainer\",!0),t||l(\"Description\",!0),m||l(\"ImportSyntax\",!0),r||l(\"ModalDemo\",!0),p||l(\"PackageManagers\",!0),a||l(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{children:\"Modal\"}),`\n`,(0,n.jsx)(t,{children:(0,n.jsx)(o.p,{children:\"A modal is a dialog box that overlays the main content to focus the user's attention.\"})}),`\n`,(0,n.jsxs)(d,{children:[(0,n.jsx)(r,{}),(0,n.jsxs)(c,{component:\"modal\",children:[(0,n.jsx)(\"pre\",{title:\"index.tsx\",source:`import React from 'react';\n\nimport {\n  ModalBackdrop,\n  ModalClose,\n  ModalContent,\n  ModalPortal,\n  ModalRoot,\n  ModalTrigger,\n} from '@melio-ui/modal';\n\nimport './styles.css';\n\nexport default function ModalDemo() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button type=\"button\" className=\"modal-trigger\">\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop className=\"modal-backdrop\" />\n        <ModalContent className=\"modal-content\">\n          <ModalClose asChild>\n            <button type=\"button\" className=\"modal-close-button\">\n              <CloseIcon />\n            </button>\n          </ModalClose>\n          <div className=\"modal-header\">Title</div>\n          <div className=\"modal-body\">Modal Content</div>\n          <div className=\"modal-footer\">\n            <ModalClose asChild>\n              <button\n                type=\"button\"\n                style={{\n                  backgroundColor: 'transparent',\n                  marginRight: 3,\n                }}\n              >\n                Close\n              </button>\n            </ModalClose>\n          </div>\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nfunction CloseIcon() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n`,children:(0,n.jsx)(\"code\",{source:`import React from 'react';\n\nimport {\n  ModalBackdrop,\n  ModalClose,\n  ModalContent,\n  ModalPortal,\n  ModalRoot,\n  ModalTrigger,\n} from '@melio-ui/modal';\n\nimport './styles.css';\n\nexport default function ModalDemo() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button type=\"button\" className=\"modal-trigger\">\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop className=\"modal-backdrop\" />\n        <ModalContent className=\"modal-content\">\n          <ModalClose asChild>\n            <button type=\"button\" className=\"modal-close-button\">\n              <CloseIcon />\n            </button>\n          </ModalClose>\n          <div className=\"modal-header\">Title</div>\n          <div className=\"modal-body\">Modal Content</div>\n          <div className=\"modal-footer\">\n            <ModalClose asChild>\n              <button\n                type=\"button\"\n                style={{\n                  backgroundColor: 'transparent',\n                  marginRight: 3,\n                }}\n              >\n                Close\n              </button>\n            </ModalClose>\n          </div>\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nfunction CloseIcon() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n`})}),(0,n.jsx)(\"pre\",{title:\"styles.css\",source:`.modal-trigger {\n  border: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  border-radius: 0.25rem;\n  padding: 0.3125rem;\n  color: #e2e8f0;\n}\n\n.modal-backdrop {\n  opacity: 1;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1200;\n  animation: fadein 0.3s;\n}\n\n.modal-content {\n  position: fixed;\n  top: 1.875rem;\n  right: 0;\n  left: 0;\n  margin: 0 auto;\n  width: 32.5rem;\n  min-width: 12.5rem;\n  min-height: 2.625rem;\n  background-color: #364664;\n  color: #e2e8f0;\n  z-index: 1200;\n  border-radius: 0.375rem;\n  animation: fadein 0.3s;\n}\n\n.modal-close-button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0.875rem;\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n  box-sizing: border-box;\n  color: inherit;\n  background: transparent;\n  font-size: 0.875rem;\n  line-height: 1;\n  vertical-align: middle;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  /* border-bottom: 0.0313rem solid #807e7e; */\n}\n\n.modal-body {\n  padding: 1.5rem;\n  max-height: 46.3125rem;\n  overflow: auto;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  text-align: right;\n  /* border-top: 0.0313rem solid #807e7e; */\n}\n\n@keyframes fadein {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n`,children:(0,n.jsx)(\"code\",{source:`.modal-trigger {\n  border: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  border-radius: 0.25rem;\n  padding: 0.3125rem;\n  color: #e2e8f0;\n}\n\n.modal-backdrop {\n  opacity: 1;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1200;\n  animation: fadein 0.3s;\n}\n\n.modal-content {\n  position: fixed;\n  top: 1.875rem;\n  right: 0;\n  left: 0;\n  margin: 0 auto;\n  width: 32.5rem;\n  min-width: 12.5rem;\n  min-height: 2.625rem;\n  background-color: #364664;\n  color: #e2e8f0;\n  z-index: 1200;\n  border-radius: 0.375rem;\n  animation: fadein 0.3s;\n}\n\n.modal-close-button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0.875rem;\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n  box-sizing: border-box;\n  color: inherit;\n  background: transparent;\n  font-size: 0.875rem;\n  line-height: 1;\n  vertical-align: middle;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  /* border-bottom: 0.0313rem solid #807e7e; */\n}\n\n.modal-body {\n  padding: 1.5rem;\n  max-height: 46.3125rem;\n  overflow: auto;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  text-align: right;\n  /* border-top: 0.0313rem solid #807e7e; */\n}\n\n@keyframes fadein {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n`})})]})]}),`\n`,(0,n.jsx)(o.h2,{children:\"Installation\"}),`\n`,(0,n.jsx)(p,{command:{npm:\"npm i @melio-ui/modal\",yarn:\"yarn add @melio-ui/modal\",pnpm:\"pnpm add @melio-ui/modal\",bun:\"bun add @melio-ui/modal\"}}),`\n`,(0,n.jsx)(o.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(m,{command:{individual:`import { \n  ModalRoot,\n  ModalTrigger,\n  ModalPortal,\n  ModalBackdrop,\n  ModalContent,\n  ModalClose,\n} from '@melio-ui/modal';`,global:`import { \n  ModalRoot,\n  ModalTrigger,\n  ModalPortal,\n  ModalBackdrop,\n  ModalContent,\n  ModalClose,\n} from '@melio-ui/react';`}}),`\n`,(0,n.jsxs)(o.ul,{children:[`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalRoot\"}),\": All parts of the modal are included.\"]}),`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalTrigger\"}),\": Used to activate or open the Modal component.\"]}),`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalPortal\"}),\": Portal the overlay and content portion into the body.\"]}),`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalBackdrop\"}),\": A layer that covers the inactive portion of the view when a dialog box is opened.\"]}),`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalContent\"}),\": Includes the content that will be displayed in the open dialog box.\"]}),`\n`,(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:\"ModalClose\"}),\": The button that closes the dialog.\"]}),`\n`]}),`\n`,(0,n.jsx)(o.h3,{children:\"Another way to import\"}),`\n`,(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:\"language-js\",children:`'use client';\n\nimport { Modal } from '@melio-ui/modal';\n\n<Modal.Root>\n  <Modal.Trigger asChild>\n    <button type=\"button\">Open Modal</button>\n  </Modal.Trigger>\n  <Modal.Portal>\n    <Modal.Backdrop />\n    <Modal.Content>\n      <Modal.Close asChild>\n        <button type=\"button\" />\n      </Modal.Close>\n      <div>Modal Content</div>\n    </Modal.Content>\n  </Modal.Portal>\n</Modal.Root>;\n`})}),`\n`,(0,n.jsxs)(o.blockquote,{children:[`\n`,(0,n.jsx)(o.p,{children:\"'use client' must be used when rendering on the server side.\"}),`\n`]}),`\n`,(0,n.jsx)(o.h2,{children:\"API Reference\"}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalRoot\"}),`\n`,(0,n.jsx)(o.p,{children:\"All parts of the modal are included.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"open\",required:!1,type:\"boolean\",description:\"Sets whether the drawer is open or closed.\"},{name:\"defaultOpen\",required:!1,type:\"boolean\",description:\"When first rendered, the drawer is in an opened state. Use when there is no need to control the opened state.\"},{name:\"onOpenChange\",required:!1,type:\"(open: boolean) => void\",description:\"This is an event handler that is triggered when the open state of the drawer changes.\"}]}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalTrigger\"}),`\n`,(0,n.jsx)(o.p,{children:\"Used to activate or open the Modal component.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"asChild\",required:!1,type:\"boolean\",description:\"Changes the default rendering element passed as a child, merging its props and behavior.\"}]}),`\n`,(0,n.jsx)(s,{data:[{attribute:\"[data-state]\",values:'\"open\" | \"closed\"'}]}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalPortal\"}),`\n`,(0,n.jsx)(o.p,{children:\"Portal the overlay and content portion into the body.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"container\",required:!1,default:\"document.body\",type:\"HTMLElement | (() => HTMLElement)\",description:\"Specifies the container element to which the content should be portaled.\"}]}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalBackdrop\"}),`\n`,(0,n.jsx)(o.p,{children:\"A layer that covers the inactive portion of the view when a dialog box is opened.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"preventCloseOnClick\",required:!1,type:\"boolean\",description:\"Prevents closing when clicking on backdrop.\"}]}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalContent\"}),`\n`,(0,n.jsx)(o.p,{children:\"Includes the content that will be displayed in the open dialog box.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"destroyOnClose\",required:!1,default:\"true\",type:\"boolean\",description:\"Used to ensure that the DOM is removed when closed.\"},{name:\"forceMount\",required:!1,type:\"boolean\",description:\"Used to ensure that a component is always rendered in the DOM, regardless of its visibility or whether it's conditionally displayed.\"},{name:\"closeOnEsc\",required:!1,default:\"true\",type:\"boolean\",description:\"Determines whether or not to close when the ESC key is pressed.\"}]}),`\n`,(0,n.jsx)(s,{data:[{attribute:\"[data-state]\",values:'\"open\" | \"closed\"'}]}),`\n`,(0,n.jsx)(o.h3,{children:\"ModalClose\"}),`\n`,(0,n.jsx)(o.p,{children:\"The button that closes the dialog.\"}),`\n`,(0,n.jsx)(a,{data:[{name:\"asChild\",required:!1,type:\"boolean\",description:\"Changes the default rendering element passed as a child, merging its props and behavior.\"}]}),`\n`,(0,n.jsx)(o.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(o.h3,{children:\"Position\"}),`\n`,(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:\"language-jsx\",render:\"true\",children:`function ModalPosition() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop />\n        <ModalContent style={{ top: 200 }}>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalPosition />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(o.h3,{children:\"Custom Size\"}),`\n`,(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:\"language-jsx\",render:\"true\",children:`function ModalCustomSize() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop />\n        <ModalContent style={{ width: 800 }}>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalCustomSize />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(o.h3,{children:\"Prevent closing when clicking on the backdrop.\"}),`\n`,(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:\"language-jsx\",render:\"true\",children:`function ModalCustomSize() {\n  return (\n    <ModalRoot>\n      <ModalTrigger asChild>\n        <button\n          type=\"button\"\n          style={{\n            border: '1px solid #475569',\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          Open Modal\n        </button>\n      </ModalTrigger>\n      <ModalPortal>\n        <ModalBackdrop preventCloseOnClick />\n        <ModalContent>\n          <ModalClose asChild>\n            <CloseIconButton />\n          </ModalClose>\n          <ModalBody />\n          <ModalFooter />\n        </ModalContent>\n      </ModalPortal>\n    </ModalRoot>\n  );\n}\n\nrender(<ModalCustomSize />);\n\nfunction CloseIconButton(props) {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: '0.875rem',\n        border: 'none',\n        outline: 'none',\n\n        cursor: 'pointer',\n        boxSizing: 'border-box',\n        color: 'inherit',\n        background: 'transparent',\n        fontSize: '0.875rem',\n        lineHeight: 1,\n        verticalAlign: 'middle',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nfunction ModalBody() {\n  return <div style={{ padding: '2rem' }}>Modal Content</div>;\n}\n\nfunction ModalFooter() {\n  return (\n    <div style={{ padding: '1rem 1.5rem', textAlign: 'right' }}>\n      <ModalClose asChild>\n        <button\n          type=\"button\"\n          style={{\n            backgroundColor: 'transparent',\n            marginRight: 3,\n          }}\n        >\n          Close\n        </button>\n      </ModalClose>\n    </div>\n  );\n}\n`})})]})}function P(e={}){let{wrapper:o}=e.components||{};return o?(0,n.jsx)(o,Object.assign({},e,{children:(0,n.jsx)(b,e)})):b(e)}var R=P;function l(e,o){throw new Error(\"Expected \"+(o?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return B(z);})();\n;return Component;"
  },
  "_id": "components/modal.mdx",
  "_raw": {
    "sourceFilePath": "components/modal.mdx",
    "sourceFileName": "modal.mdx",
    "sourceFileDir": "components",
    "contentType": "mdx",
    "flattenedPath": "components/modal"
  },
  "type": "Doc",
  "slug": "/components/modal",
  "frontMatter": {
    "title": "Modal",
    "slug": "/components/modal"
  }
}