{
  "title": "Tabs",
  "scope": "usage",
  "prevTitle": "Switch",
  "prevSlug": "/components/switch",
  "nextTitle": "Toast",
  "nextSlug": "/components/toast",
  "body": {
    "raw": "\n# Tabs\n\n<Description>\n  A series of layered content sections, called tab panels, that are shown one at a time.\n</Description>\n\n<DemoContainer>\n  <TabsDemo />\n  <DemoCodeBlock component=\"tabs\" />\n</DemoContainer>\n\n## Installation\n\n<PackageManagers\n  command={{\n    npm: 'npm i @melio-ui/tabs',\n    yarn: 'yarn add @melio-ui/tabs',\n    pnpm: 'pnpm add @melio-ui/tabs',\n    bun: 'bun add @melio-ui/tabs',\n  }}\n/>\n\n## Import\n\n<ImportSyntax\n  command={{\n    individual: `import { \n  TabsRoot,\n  TabsList,\n  TabsTab,\n  TabsContent,\n} from '@melio-ui/tabs';`,\n    global: `import { \n  TabsRoot,\n  TabsList,\n  TabsTab,\n  TabsContent,\n} from '@melio-ui/react';`,\n  }}\n/>\n\n- **TabsRoot**: All parts of the tabs are included.\n- **TabsList**: Contains the buttons or tabs aligned with the edge of the active content.\n- **TabsTab**: This button activates related content.\n- **TabsContent**: Includes content related to each tab.\n\n### Another way to import\n\n```js\n'use client';\n\nimport { Tabs } from '@melio-ui/tabs';\n\n<Tabs.Root>\n  <Tabs.List>\n    <Tabs.Tab>Tab1</Tabs.Tab>\n    <Tabs.Tab>Tab2</Tabs.Tab>\n  </Tabs.List>\n  <Tabs.Content>\n    <p>TabContent1</p>\n  </Tabs.Content>\n  <Tabs.Content>\n    <p>TabContent2</p>\n  </Tabs.Content>\n</Tabs.Root>;\n```\n\n> 'use client' must be used when rendering on the server side.\n\n## API Reference\n\n### TabsRoot\n\nAll parts of the tabs are included.\n\n<PropsTable\n  data={[\n    {\n      name: 'value',\n      required: false,\n      type: 'string',\n      description: 'The value of the activated tab content.',\n    },\n    {\n      name: 'defaultValue',\n      required: false,\n      type: 'string',\n      description: 'The initial value of the activated tab content.',\n    },\n    {\n      name: 'orientation',\n      required: false,\n      type: (\n        <>\n          TypeAttributes.Orientation\n          <br />\n          <br />\n          \"horizontal\" | \"vertical\"\n        </>\n      ),\n      description: 'Direction for the placement of the Tabs component.',\n    },\n    {\n      name: 'renderMode',\n      required: false,\n      type: '\"selecting\" | \"selected\" | \"force\"',\n      default: '\"selecting\"',\n      description: (\n        <>\n          How to render tab content.\n          <br />\n          <br />\n          selecting: Rendering only the currently activated tab content.\n          <br />\n          selected: Rendering tab contents that have been activated.\n          <br />\n          force: Rendering all tab contents.\n        </>\n      ),\n    },\n    {\n      name: 'onValueChange',\n      required: false,\n      type: '(value: string) => void',\n      description: 'The callback invoked when a tab content is activated.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-orientation]',\n      values: '\"horizontal\" | \"vertical\"',\n    },\n  ]}\n/>\n\n### TabsList\n\nContains the buttons or tabs aligned with the edge of the active content.\n\n### TabsTab\n\nThis button activates related content.\n\n<PropsTable\n  data={[\n    {\n      name: 'value',\n      required: false,\n      type: 'string',\n      description: 'The value of the tab.',\n    },\n    {\n      name: 'disabled',\n      required: false,\n      type: 'boolean',\n      description: 'Determines whether the tab is inactive.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"active\" | \"inactive\"',\n    },\n    {\n      attribute: '[data-disabled]',\n      values: 'Visible when disabled',\n    },\n  ]}\n/>\n\n### TabsContent\n\nIncludes content related to each tab.\n\n<PropsTable\n  data={[\n    {\n      name: 'value',\n      required: false,\n      type: 'string',\n      description: 'The value of the tab content.',\n    },\n  ]}\n/>\n\n<DataAttributesTable\n  data={[\n    {\n      attribute: '[data-state]',\n      values: '\"active\" | \"inactive\"',\n    },\n  ]}\n/>\n\n## Examples\n\n### defaultValue\n\n```jsx\n<TabsRoot defaultValue=\"tab2\">\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\">Tab2</TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n```\n\n### disabled tab\n\n```jsx\n<TabsRoot>\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\" disabled>\n      Tab2\n    </TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n```\n\n### Orientation\n\n```jsx\n<TabsRoot orientation=\"vertical\">\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\">Tab2</TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n```\n",
    "code": "var Component=(()=>{var g=Object.create;var l=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var x=(a,t)=>()=>(t||a((t={exports:{}}).exports,t),t.exports),w=(a,t)=>{for(var e in t)l(a,e,{get:t[e],enumerable:!0})},m=(a,t,e,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of f(t))!y.call(a,o)&&o!==e&&l(a,o,{get:()=>t[o],enumerable:!(r=v(t,o))||r.enumerable});return a};var R=(a,t,e)=>(e=a!=null?g(C(a)):{},m(t||!a||!a.__esModule?l(e,\"default\",{value:a,enumerable:!0}):e,a)),N=a=>m(l({},\"__esModule\",{value:!0}),a);var u=x((q,p)=>{p.exports=_jsx_runtime});var S={};w(S,{default:()=>D,frontmatter:()=>L});var n=R(u()),L={title:\"Tabs\",prevTitle:\"Switch\",prevSlug:\"/components/switch\",nextTitle:\"Toast\",nextSlug:\"/components/toast\"};function h(a){let t=Object.assign({h1:\"h1\",p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",br:\"br\"},a.components),{Description:e,DemoContainer:r,TabsDemo:o,DemoCodeBlock:c,PackageManagers:d,ImportSyntax:T,PropsTable:b,DataAttributesTable:i}=t;return i||s(\"DataAttributesTable\",!0),c||s(\"DemoCodeBlock\",!0),r||s(\"DemoContainer\",!0),e||s(\"Description\",!0),T||s(\"ImportSyntax\",!0),d||s(\"PackageManagers\",!0),b||s(\"PropsTable\",!0),o||s(\"TabsDemo\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:\"Tabs\"}),`\n`,(0,n.jsx)(e,{children:(0,n.jsx)(t.p,{children:\"A series of layered content sections, called tab panels, that are shown one at a time.\"})}),`\n`,(0,n.jsxs)(r,{children:[(0,n.jsx)(o,{}),(0,n.jsxs)(c,{component:\"tabs\",children:[(0,n.jsx)(\"pre\",{title:\"index.tsx\",source:`import React from 'react';\n\nimport { TabsContent, TabsList, TabsRoot, TabsTab } from '@melio-ui/tabs';\n\nimport './styles.css';\n\nexport default function TabsDemo() {\n  return (\n    <TabsRoot className=\"tabs-root\">\n      <TabsList className=\"tabs-list\">\n        <TabsTab className=\"tabs-tab\">Tab1</TabsTab>\n        <TabsTab className=\"tabs-tab\">Tab2</TabsTab>\n        <TabsTab className=\"tabs-tab\">\n          <UserIcon style={{ marginRight: 5 }} />\n          Tab3\n        </TabsTab>\n      </TabsList>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent1</p>\n      </TabsContent>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent2</p>\n      </TabsContent>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent3</p>\n      </TabsContent>\n    </TabsRoot>\n  );\n}\n\nfunction UserIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n    </svg>\n  );\n}\n`,children:(0,n.jsx)(\"code\",{source:`import React from 'react';\n\nimport { TabsContent, TabsList, TabsRoot, TabsTab } from '@melio-ui/tabs';\n\nimport './styles.css';\n\nexport default function TabsDemo() {\n  return (\n    <TabsRoot className=\"tabs-root\">\n      <TabsList className=\"tabs-list\">\n        <TabsTab className=\"tabs-tab\">Tab1</TabsTab>\n        <TabsTab className=\"tabs-tab\">Tab2</TabsTab>\n        <TabsTab className=\"tabs-tab\">\n          <UserIcon style={{ marginRight: 5 }} />\n          Tab3\n        </TabsTab>\n      </TabsList>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent1</p>\n      </TabsContent>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent2</p>\n      </TabsContent>\n      <TabsContent className=\"tabs-content\">\n        <p>TabContent3</p>\n      </TabsContent>\n    </TabsRoot>\n  );\n}\n\nfunction UserIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n    </svg>\n  );\n}\n`})}),(0,n.jsx)(\"pre\",{title:\"styles.css\",source:`.tabs-root[data-orientation='vertical'] {\n  display: flex;\n}\n\n.tabs-list {\n  border-bottom: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  margin: 0;\n  padding: 0;\n}\n.tabs-root[data-orientation='vertical'] .tabs-list {\n  display: flex;\n  flex-direction: column;\n  min-width: 3.125rem;\n  margin: 0;\n  border-bottom: none;\n  border-right: 1px solid rgba(255, 255, 255, 0.35);\n}\n\n.tabs-tab {\n  display: inline-flex;\n  align-items: center;\n  border: 0.0625rem solid transparent;\n  border-bottom: none;\n  bottom: -0.1875rem;\n  position: relative;\n  list-style: none;\n  padding: 0.375rem 0.75rem;\n  cursor: pointer;\n  color: #e2e8f0;\n}\n.tabs-tab[data-state='active'] {\n  background-color: rgb(45, 55, 72);\n  border-color: rgba(255, 255, 255, 0.35);\n  color: #208aff;\n  border-radius: 0.3125rem 0.3125rem 0 0;\n}\n.tabs-tab[data-disabled] {\n  cursor: default;\n  opacity: 0.3;\n}\n.tabs-root[data-orientation='vertical'] .tabs-tab {\n  display: block;\n  bottom: 0;\n  border-right: none;\n  right: -0.0625rem;\n}\n.tabs-root[data-orientation='vertical'] .tabs-tab[data-state='active'] {\n  border-bottom: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  border-radius: 0.3125rem 0 0 0.3125rem;\n}\n\n.tabs-content {\n  padding: 0.625rem;\n  display: none;\n  color: #e2e8f0;\n}\n.tabs-content[data-state='active'] {\n  display: block;\n  background-color: rgb(45, 55, 72);\n}\n.tabs-root[data-orientation='vertical'] .tabs-content {\n  width: 100%;\n}\n`,children:(0,n.jsx)(\"code\",{source:`.tabs-root[data-orientation='vertical'] {\n  display: flex;\n}\n\n.tabs-list {\n  border-bottom: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  margin: 0;\n  padding: 0;\n}\n.tabs-root[data-orientation='vertical'] .tabs-list {\n  display: flex;\n  flex-direction: column;\n  min-width: 3.125rem;\n  margin: 0;\n  border-bottom: none;\n  border-right: 1px solid rgba(255, 255, 255, 0.35);\n}\n\n.tabs-tab {\n  display: inline-flex;\n  align-items: center;\n  border: 0.0625rem solid transparent;\n  border-bottom: none;\n  bottom: -0.1875rem;\n  position: relative;\n  list-style: none;\n  padding: 0.375rem 0.75rem;\n  cursor: pointer;\n  color: #e2e8f0;\n}\n.tabs-tab[data-state='active'] {\n  background-color: rgb(45, 55, 72);\n  border-color: rgba(255, 255, 255, 0.35);\n  color: #208aff;\n  border-radius: 0.3125rem 0.3125rem 0 0;\n}\n.tabs-tab[data-disabled] {\n  cursor: default;\n  opacity: 0.3;\n}\n.tabs-root[data-orientation='vertical'] .tabs-tab {\n  display: block;\n  bottom: 0;\n  border-right: none;\n  right: -0.0625rem;\n}\n.tabs-root[data-orientation='vertical'] .tabs-tab[data-state='active'] {\n  border-bottom: 0.0625rem solid rgba(255, 255, 255, 0.35);\n  border-radius: 0.3125rem 0 0 0.3125rem;\n}\n\n.tabs-content {\n  padding: 0.625rem;\n  display: none;\n  color: #e2e8f0;\n}\n.tabs-content[data-state='active'] {\n  display: block;\n  background-color: rgb(45, 55, 72);\n}\n.tabs-root[data-orientation='vertical'] .tabs-content {\n  width: 100%;\n}\n`})})]})]}),`\n`,(0,n.jsx)(t.h2,{children:\"Installation\"}),`\n`,(0,n.jsx)(d,{command:{npm:\"npm i @melio-ui/tabs\",yarn:\"yarn add @melio-ui/tabs\",pnpm:\"pnpm add @melio-ui/tabs\",bun:\"bun add @melio-ui/tabs\"}}),`\n`,(0,n.jsx)(t.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(T,{command:{individual:`import { \n  TabsRoot,\n  TabsList,\n  TabsTab,\n  TabsContent,\n} from '@melio-ui/tabs';`,global:`import { \n  TabsRoot,\n  TabsList,\n  TabsTab,\n  TabsContent,\n} from '@melio-ui/react';`}}),`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:\"TabsRoot\"}),\": All parts of the tabs are included.\"]}),`\n`,(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:\"TabsList\"}),\": Contains the buttons or tabs aligned with the edge of the active content.\"]}),`\n`,(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:\"TabsTab\"}),\": This button activates related content.\"]}),`\n`,(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:\"TabsContent\"}),\": Includes content related to each tab.\"]}),`\n`]}),`\n`,(0,n.jsx)(t.h3,{children:\"Another way to import\"}),`\n`,(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:\"language-js\",children:`'use client';\n\nimport { Tabs } from '@melio-ui/tabs';\n\n<Tabs.Root>\n  <Tabs.List>\n    <Tabs.Tab>Tab1</Tabs.Tab>\n    <Tabs.Tab>Tab2</Tabs.Tab>\n  </Tabs.List>\n  <Tabs.Content>\n    <p>TabContent1</p>\n  </Tabs.Content>\n  <Tabs.Content>\n    <p>TabContent2</p>\n  </Tabs.Content>\n</Tabs.Root>;\n`})}),`\n`,(0,n.jsxs)(t.blockquote,{children:[`\n`,(0,n.jsx)(t.p,{children:\"'use client' must be used when rendering on the server side.\"}),`\n`]}),`\n`,(0,n.jsx)(t.h2,{children:\"API Reference\"}),`\n`,(0,n.jsx)(t.h3,{children:\"TabsRoot\"}),`\n`,(0,n.jsx)(t.p,{children:\"All parts of the tabs are included.\"}),`\n`,(0,n.jsx)(b,{data:[{name:\"value\",required:!1,type:\"string\",description:\"The value of the activated tab content.\"},{name:\"defaultValue\",required:!1,type:\"string\",description:\"The initial value of the activated tab content.\"},{name:\"orientation\",required:!1,type:(0,n.jsxs)(n.Fragment,{children:[\"TypeAttributes.Orientation\",(0,n.jsx)(t.br,{}),(0,n.jsx)(t.br,{}),'\"horizontal\" | \"vertical\"']}),description:\"Direction for the placement of the Tabs component.\"},{name:\"renderMode\",required:!1,type:'\"selecting\" | \"selected\" | \"force\"',default:'\"selecting\"',description:(0,n.jsxs)(n.Fragment,{children:[\"How to render tab content.\",(0,n.jsx)(t.br,{}),(0,n.jsx)(t.br,{}),\"selecting: Rendering only the currently activated tab content.\",(0,n.jsx)(t.br,{}),\"selected: Rendering tab contents that have been activated.\",(0,n.jsx)(t.br,{}),\"force: Rendering all tab contents.\"]})},{name:\"onValueChange\",required:!1,type:\"(value: string) => void\",description:\"The callback invoked when a tab content is activated.\"}]}),`\n`,(0,n.jsx)(i,{data:[{attribute:\"[data-orientation]\",values:'\"horizontal\" | \"vertical\"'}]}),`\n`,(0,n.jsx)(t.h3,{children:\"TabsList\"}),`\n`,(0,n.jsx)(t.p,{children:\"Contains the buttons or tabs aligned with the edge of the active content.\"}),`\n`,(0,n.jsx)(t.h3,{children:\"TabsTab\"}),`\n`,(0,n.jsx)(t.p,{children:\"This button activates related content.\"}),`\n`,(0,n.jsx)(b,{data:[{name:\"value\",required:!1,type:\"string\",description:\"The value of the tab.\"},{name:\"disabled\",required:!1,type:\"boolean\",description:\"Determines whether the tab is inactive.\"}]}),`\n`,(0,n.jsx)(i,{data:[{attribute:\"[data-state]\",values:'\"active\" | \"inactive\"'},{attribute:\"[data-disabled]\",values:\"Visible when disabled\"}]}),`\n`,(0,n.jsx)(t.h3,{children:\"TabsContent\"}),`\n`,(0,n.jsx)(t.p,{children:\"Includes content related to each tab.\"}),`\n`,(0,n.jsx)(b,{data:[{name:\"value\",required:!1,type:\"string\",description:\"The value of the tab content.\"}]}),`\n`,(0,n.jsx)(i,{data:[{attribute:\"[data-state]\",values:'\"active\" | \"inactive\"'}]}),`\n`,(0,n.jsx)(t.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(t.h3,{children:\"defaultValue\"}),`\n`,(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:\"language-jsx\",children:`<TabsRoot defaultValue=\"tab2\">\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\">Tab2</TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n`})}),`\n`,(0,n.jsx)(t.h3,{children:\"disabled tab\"}),`\n`,(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:\"language-jsx\",children:`<TabsRoot>\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\" disabled>\n      Tab2\n    </TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n`})}),`\n`,(0,n.jsx)(t.h3,{children:\"Orientation\"}),`\n`,(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:\"language-jsx\",children:`<TabsRoot orientation=\"vertical\">\n  <TabsList>\n    <TabsTab value=\"tab1\">Tab1</TabsTab>\n    <TabsTab value=\"tab2\">Tab2</TabsTab>\n    <TabsTab value=\"tab3\">Tab3</TabsTab>\n  </TabsList>\n  <TabsContent value=\"tab1\">\n    <p>TabContent1</p>\n  </TabsContent>\n  <TabsContent value=\"tab2\">\n    <p>TabContent2</p>\n  </TabsContent>\n  <TabsContent value=\"tab3\">\n    <p>TabContent3</p>\n  </TabsContent>\n</TabsRoot>\n`})})]})}function k(a={}){let{wrapper:t}=a.components||{};return t?(0,n.jsx)(t,Object.assign({},a,{children:(0,n.jsx)(h,a)})):h(a)}var D=k;function s(a,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return N(S);})();\n;return Component;"
  },
  "_id": "components/tabs.mdx",
  "_raw": {
    "sourceFilePath": "components/tabs.mdx",
    "sourceFileName": "tabs.mdx",
    "sourceFileDir": "components",
    "contentType": "mdx",
    "flattenedPath": "components/tabs"
  },
  "type": "Doc",
  "slug": "/components/tabs",
  "frontMatter": {
    "title": "Tabs",
    "slug": "/components/tabs"
  }
}